{"version":3,"sources":["components/wallet/candy-machine.ts","components/layout/header/header.module.css","components/ui/container/container.module.css","components/ui/image/image.module.css","components/ui/button/button.module.css","components/layout/how-to/how-to.module.css","components/layout/hero/hero.module.css","components/ui/container/container.tsx","components/ui/image/image.tsx","assets/logo.svg","components/layout/header/header.tsx","assets/solana-logo.svg","assets/Shiba Family Solana Shiba Man.gif","components/layout/hero/hero.tsx","components/layout/how-to/how-to.tsx","assets/discord.svg","assets/twitter.svg","components/layout/footer/footer.tsx","components/wallet/components/wallet-button.tsx","store/wallet/wallet.redux.ts","components/wallet/Home.tsx","components/wallet/index.tsx","store/index.ts","App.tsx","reportWebVitals.ts","index.tsx","components/wallet/components/wallet-button.module.css","components/layout/footer/footer.module.css"],"names":["CANDY_MACHINE_PROGRAM","anchor","PublicKey","SPL_ASSOCIATED_TOKEN_ACCOUNT_PROGRAM_ID","TOKEN_METADATA_PROGRAM_ID","awaitTransactionSignatureConfirmation","txid","timeout","connection","a","commitment","queryStatus","done","status","slot","confirmations","err","subId","Promise","resolve","reject","setTimeout","console","log","onSignature","result","context","e","error","getSignatureStatuses","signatureStatuses","value","sleep","_signatureSubscriptions","removeSignatureListener","createAssociatedTokenAccountInstruction","associatedTokenAddress","payer","walletAddress","splTokenMintAddress","keys","pubkey","isSigner","isWritable","SystemProgram","programId","TOKEN_PROGRAM_ID","SYSVAR_RENT_PUBKEY","TransactionInstruction","data","Buffer","from","getCandyMachineState","anchorWallet","candyMachineId","provider","preflightCommitment","fetchIdl","idl","program","candyMachine","id","account","fetch","state","itemsAvailable","toNumber","itemsRedeemed","itemsRemaining","goLiveDate","getMasterEdition","mint","findProgramAddress","toBuffer","getMetadata","getTokenWallet","wallet","mintOneToken","config","treasury","Keypair","generate","publicKey","token","metadata","masterEdition","getMinimumBalanceForRentExemption","MintLayout","span","rent","rpc","mintNft","accounts","mintAuthority","updateAuthority","tokenMetadataProgram","tokenProgram","systemProgram","clock","SYSVAR_CLOCK_PUBKEY","signers","instructions","createAccount","fromPubkey","newAccountPubkey","space","lamports","Token","createInitMintInstruction","createMintToInstruction","shortenAddress","address","chars","slice","ms","module","exports","Container","children","className","wrapperClassName","containerStyles","styles","container","Image","src","altText","link","isBlank","isLink","length","alt","isNewTab","imageStyle","image","href","target","rel","Header","useSelector","balance","header","logo","Hero","hero","leftColumn","title","colorText","subtitle","numbersBlock","numbers","amount","solanaLogo","text","description","buttonGroup","btnStyle","onClick","rightColumn","heroGif","HowTo","listBlock","list","item","ital","videoBlock","frameBorder","allow","allowFullScreen","Footer","wrapper","footer","footerLogo","socialBlock","social","discord","twitter","copyright","WalletButton","initialState","createSlice","name","reducers","resetStore","setAddress","action","payload","setUserBalance","actions","ConnectButton","styled","WalletDialogButton","CounterText","MintContainer","div","MintButton","Button","renderCounter","days","hours","minutes","seconds","completed","Home","props","useState","setBalance","isActive","setIsActive","isSoldOut","setIsSoldOut","isMinting","setIsMinting","open","message","severity","undefined","alertState","setAlertState","Date","startDate","setStartDate","useWallet","setCandyMachine","onMint","connected","mintTxId","txTimeout","msg","code","indexOf","getBalance","LAMPORTS_PER_SOL","useEffect","signAllTransactions","signTransaction","dispatch","useDispatch","toBase58","btnColor","purple","blue","disabled","variant","mintButton","CircularProgress","date","onMount","onComplete","renderer","connectButton","Snackbar","autoHideDuration","onClose","Alert","notifications","process","Connection","startDateSeed","parseInt","Wallet","endpoint","useMemo","clusterApiUrl","wallets","getPhantomWallet","getSolflareWallet","getSolletWallet","autoConnect","reducer","combineReducers","store","configureStore","middleware","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.536d9ed6.chunk.js","sourcesContent":["import * as anchor from \"@project-serum/anchor\";\n\nimport {\n  MintLayout,\n  TOKEN_PROGRAM_ID,\n  Token,\n} from \"@solana/spl-token\";\n\nexport const CANDY_MACHINE_PROGRAM = new anchor.web3.PublicKey(\n  \"cndyAnrLdpjq1Ssp1z8xxDsB8dxe7u4HL5Nxi2K5WXZ\"\n);\n\nconst SPL_ASSOCIATED_TOKEN_ACCOUNT_PROGRAM_ID = new anchor.web3.PublicKey(\n  \"ATokenGPvbdGVxr1b2hvZbsiqW5xWH25efTNsLJA8knL\"\n);\n\nconst TOKEN_METADATA_PROGRAM_ID = new anchor.web3.PublicKey(\n  \"metaqbxxUerdq28cj1RbAWkYQm3ybzjb6a8bt518x1s\"\n);\n\nexport interface CandyMachine {\n  id: anchor.web3.PublicKey,\n  connection: anchor.web3.Connection;\n  program: anchor.Program;\n}\n\ninterface CandyMachineState {\n  candyMachine: CandyMachine;\n  itemsAvailable: number;\n  itemsRedeemed: number;\n  itemsRemaining: number;\n  goLiveDate: Date,\n}\n\nexport const awaitTransactionSignatureConfirmation = async (\n  txid: anchor.web3.TransactionSignature,\n  timeout: number,\n  connection: anchor.web3.Connection,\n  commitment: anchor.web3.Commitment = \"recent\",\n  queryStatus = false\n): Promise<anchor.web3.SignatureStatus | null | void> => {\n  let done = false;\n  let status: anchor.web3.SignatureStatus | null | void = {\n    slot: 0,\n    confirmations: 0,\n    err: null,\n  };\n  let subId = 0;\n  status = await new Promise( async ( resolve, reject ) => {\n    setTimeout( () => {\n      if ( done ) {\n        return;\n      }\n      done = true;\n      console.log( \"Rejecting for timeout...\" );\n      reject( { timeout: true } );\n    }, timeout );\n    try {\n      subId = connection.onSignature(\n        txid,\n        ( result: any, context: any ) => {\n          done = true;\n          status = {\n            err: result.err,\n            slot: context.slot,\n            confirmations: 0,\n          };\n          if ( result.err ) {\n            console.log( \"Rejected via websocket\", result.err );\n            reject( status );\n          } else {\n            console.log( \"Resolved via websocket\", result );\n            resolve( status );\n          }\n        },\n        commitment\n      );\n    } catch ( e ) {\n      done = true;\n      console.error( \"WS error in setup\", txid, e );\n    }\n    while ( !done && queryStatus ) {\n      // eslint-disable-next-line no-loop-func\n      (async () => {\n        try {\n          const signatureStatuses = await connection.getSignatureStatuses( [\n            txid,\n          ] );\n          status = signatureStatuses && signatureStatuses.value[0];\n          if ( !done ) {\n            if ( !status ) {\n              console.log( \"REST null result for\", txid, status );\n            } else if ( status.err ) {\n              console.log( \"REST error for\", txid, status );\n              done = true;\n              reject( status.err );\n            } else if ( !status.confirmations ) {\n              console.log( \"REST no confirmations for\", txid, status );\n            } else {\n              console.log( \"REST confirmation for\", txid, status );\n              done = true;\n              resolve( status );\n            }\n          }\n        } catch ( e ) {\n          if ( !done ) {\n            console.log( \"REST connection error: txid\", txid, e );\n          }\n        }\n      })();\n      await sleep( 2000 );\n    }\n  } );\n\n  //@ts-ignore\n  if ( connection._signatureSubscriptions[subId] ) {\n    connection.removeSignatureListener( subId );\n  }\n  done = true;\n  console.log( \"Returning status\", status );\n  return status;\n}\n\n/* export */\nconst createAssociatedTokenAccountInstruction = (\n  associatedTokenAddress: anchor.web3.PublicKey,\n  payer: anchor.web3.PublicKey,\n  walletAddress: anchor.web3.PublicKey,\n  splTokenMintAddress: anchor.web3.PublicKey\n) => {\n  const keys = [\n    { pubkey: payer, isSigner: true, isWritable: true },\n    { pubkey: associatedTokenAddress, isSigner: false, isWritable: true },\n    { pubkey: walletAddress, isSigner: false, isWritable: false },\n    { pubkey: splTokenMintAddress, isSigner: false, isWritable: false },\n    {\n      pubkey: anchor.web3.SystemProgram.programId,\n      isSigner: false,\n      isWritable: false,\n    },\n    { pubkey: TOKEN_PROGRAM_ID, isSigner: false, isWritable: false },\n    {\n      pubkey: anchor.web3.SYSVAR_RENT_PUBKEY,\n      isSigner: false,\n      isWritable: false,\n    },\n  ];\n  return new anchor.web3.TransactionInstruction( {\n    keys,\n    programId: SPL_ASSOCIATED_TOKEN_ACCOUNT_PROGRAM_ID,\n    data: Buffer.from( [] ),\n  } );\n}\n\nexport const getCandyMachineState = async (\n  anchorWallet: anchor.Wallet,\n  candyMachineId: anchor.web3.PublicKey,\n  connection: anchor.web3.Connection,\n): Promise<CandyMachineState> => {\n\n  const provider = new anchor.Provider( connection, anchorWallet, {\n    preflightCommitment: \"recent\",\n  } );\n\n  console.log(provider);\n\n  const idl = await anchor.Program.fetchIdl(\n    CANDY_MACHINE_PROGRAM,\n    provider\n  );\n\n  const program = new anchor.Program(idl, CANDY_MACHINE_PROGRAM, provider);\n  const candyMachine = {\n    id: candyMachineId,\n    connection,\n    program,\n  }\n\n  const state: any = await program.account.candyMachine.fetch( candyMachineId );\n  const itemsAvailable = state.data.itemsAvailable.toNumber();\n  const itemsRedeemed = state.itemsRedeemed.toNumber();\n  const itemsRemaining = itemsAvailable - itemsRedeemed;\n\n  let goLiveDate = state.data.goLiveDate.toNumber();\n  // let goLiveDate = new Date( 1000 );\n\n  return {\n    candyMachine,\n    itemsAvailable,\n    itemsRedeemed,\n    itemsRemaining,\n    goLiveDate,\n  };\n}\n\nconst getMasterEdition = async (\n  mint: anchor.web3.PublicKey\n): Promise<anchor.web3.PublicKey> => {\n  return (\n    await anchor.web3.PublicKey.findProgramAddress(\n      [\n        Buffer.from( \"metadata\" ),\n        TOKEN_METADATA_PROGRAM_ID.toBuffer(),\n        mint.toBuffer(),\n        Buffer.from( \"edition\" ),\n      ],\n      TOKEN_METADATA_PROGRAM_ID\n    )\n  )[0];\n};\n\nconst getMetadata = async (\n  mint: anchor.web3.PublicKey\n): Promise<anchor.web3.PublicKey> => {\n  return (\n    await anchor.web3.PublicKey.findProgramAddress(\n      [\n        Buffer.from( \"metadata\" ),\n        TOKEN_METADATA_PROGRAM_ID.toBuffer(),\n        mint.toBuffer(),\n      ],\n      TOKEN_METADATA_PROGRAM_ID\n    )\n  )[0];\n};\n\nconst getTokenWallet = async (\n  wallet: anchor.web3.PublicKey,\n  mint: anchor.web3.PublicKey\n) => {\n  return (\n    await anchor.web3.PublicKey.findProgramAddress(\n      [wallet.toBuffer(), TOKEN_PROGRAM_ID.toBuffer(), mint.toBuffer()],\n      SPL_ASSOCIATED_TOKEN_ACCOUNT_PROGRAM_ID\n    )\n  )[0];\n};\n\nexport const mintOneToken = async (\n  candyMachine: CandyMachine,\n  config: anchor.web3.PublicKey, // feels like this should be part of candyMachine?\n  payer: anchor.web3.PublicKey,\n  treasury: anchor.web3.PublicKey,\n): Promise<string> => {\n  const mint = anchor.web3.Keypair.generate();\n  const token = await getTokenWallet( payer, mint.publicKey );\n  const { connection, program } = candyMachine;\n  const metadata = await getMetadata( mint.publicKey );\n  const masterEdition = await getMasterEdition( mint.publicKey );\n\n  const rent = await connection.getMinimumBalanceForRentExemption(\n    MintLayout.span\n  );\n\n  return await program.rpc.mintNft( {\n    accounts: {\n      config,\n      candyMachine: candyMachine.id,\n      payer: payer,\n      wallet: treasury,\n      mint: mint.publicKey,\n      metadata,\n      masterEdition,\n      mintAuthority: payer,\n      updateAuthority: payer,\n      tokenMetadataProgram: TOKEN_METADATA_PROGRAM_ID,\n      tokenProgram: TOKEN_PROGRAM_ID,\n      systemProgram: anchor.web3.SystemProgram.programId,\n      rent: anchor.web3.SYSVAR_RENT_PUBKEY,\n      clock: anchor.web3.SYSVAR_CLOCK_PUBKEY,\n    },\n    signers: [mint],\n    instructions: [\n      anchor.web3.SystemProgram.createAccount( {\n        fromPubkey: payer,\n        newAccountPubkey: mint.publicKey,\n        space: MintLayout.span,\n        lamports: rent,\n        programId: TOKEN_PROGRAM_ID,\n      } ),\n      Token.createInitMintInstruction(\n        TOKEN_PROGRAM_ID,\n        mint.publicKey,\n        0,\n        payer,\n        payer\n      ),\n      createAssociatedTokenAccountInstruction(\n        token,\n        payer,\n        payer,\n        mint.publicKey\n      ),\n      Token.createMintToInstruction(\n        TOKEN_PROGRAM_ID,\n        mint.publicKey,\n        token,\n        payer,\n        [],\n        1\n      ),\n    ],\n  } );\n}\n\nexport const shortenAddress = ( address: string, chars = 4 ): string => {\n  return `${address.slice( 0, chars )}...${address.slice( -chars )}`;\n};\n\nconst sleep = ( ms: number ): Promise<void> => {\n  return new Promise( ( resolve ) => setTimeout( resolve, ms ) );\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"header_header__Wm5kt\",\"wallet\":\"header_wallet__YXwpj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"container_container__2g2SU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"image\":\"image_image__Ua9n_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"button_button__1yjAB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"how-to_container__1Sdcz\",\"title\":\"how-to_title__3jWoB\",\"subtitle\":\"how-to_subtitle__Y4j7k\",\"list\":\"how-to_list__34q4L\",\"item\":\"how-to_item__1TC_G\",\"ital\":\"how-to_ital__22O_l\",\"description\":\"how-to_description__2xh48\",\"videoBlock\":\"how-to_videoBlock__2kMPm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"hero\":\"hero_hero__3F9F9\",\"title\":\"hero_title__2HjjL\",\"subtitle\":\"hero_subtitle__1ICHh\",\"colorText\":\"hero_colorText__37QLI\",\"numbersBlock\":\"hero_numbersBlock__V43Un\",\"numbers\":\"hero_numbers__12FcQ\",\"amount\":\"hero_amount__2eUJg\",\"text\":\"hero_text__10DKq\",\"description\":\"hero_description__1SYmK\",\"buttonGroup\":\"hero_buttonGroup__2ZCuA\",\"link\":\"hero_link__1o8IA\",\"image\":\"hero_image__JFQN3\"};","import React from \"react\";\n\nimport styles from \"./container.module.css\";\n\ntype Props = {\n  children: any;\n  className?: string;\n  wrapperClassName?: string;\n};\n\nconst Container = ( { children, className = \"\", wrapperClassName = \"\" }: Props ) => {\n  const containerStyles = `${styles.container} ${className}`\n\n  return (\n    <div className={wrapperClassName}>\n      <div className={containerStyles}>{children}</div>\n    </div>\n  )\n};\n\nexport default Container;","import React from \"react\";\n\nimport styles from \"./image.module.css\";\n\ninterface ImageProps {\n  src: any;\n  altText?: string;\n  link?: string;\n  isBlank?: boolean;\n  className?: string;\n}\n\nconst Image = ( { src, altText, link, isBlank, className }: ImageProps ) => {\n  const isLink = link?.length;\n  const alt = altText && altText?.length > 0 ? altText : \"image\";\n  const isNewTab = isBlank ? \"_blank\" : \"\";\n  const imageStyle = `${styles.image} ${className}`;\n\n  return (\n    <div>\n      {isLink ? (\n        <a href={link} target={isNewTab} rel=\"nofollow noopener\">\n          <img src={src} alt={alt} className={imageStyle}/>\n        </a>\n      ) : (<img src={src} alt={alt} className={imageStyle}/>)}\n    </div>\n  )\n};\n\nexport default Image;","export default __webpack_public_path__ + \"static/media/logo.0bdbf8d5.svg\";","import React from \"react\";\nimport { useSelector } from \"react-redux\";\n\nimport { Container, Image } from \"components\";\nimport { RootState } from \"../../../store\";\n\nimport styles from \"./header.module.css\";\n\nimport logo from \"assets/logo.svg\";\n\nconst Header = () => {\n  const { address, balance } = useSelector( ( state: RootState ) => state.wallet );\n\n  return (\n    <Container>\n      <header className={styles.header}>\n        <div>\n          <Image src={logo}/>\n        </div>\n        <div className={styles.wallet}>\n          {address && <div>Address:<strong>{address}</strong></div>}\n          {balance && <div>Balance:<strong>{balance}</strong></div>}\n        </div>\n      </header>\n    </Container>\n  )\n};\n\nexport default Header;","export default __webpack_public_path__ + \"static/media/solana-logo.9c72085b.svg\";","export default __webpack_public_path__ + \"static/media/Shiba Family Solana Shiba Man.2859cbb9.gif\";","import React from \"react\";\n// import { useHistory } from \"react-router-dom\";\n\nimport { Container, Image, Wallet } from \"components\";\nimport styles from \"./hero.module.css\";\n\nimport solanaLogo from \"assets/solana-logo.svg\";\nimport heroGif from \"assets/Shiba Family Solana Shiba Man.gif\"\n\nconst mintPrice = 1.3;\nconst mintSupply = 1000;\n\nconst Hero = () => {\n\n  const clearUrl = () => {};\n\n  return (\n    <Container>\n      <div className={styles.hero}>\n        <div className={styles.leftColumn}>\n          <h2 className={styles.title}>\n            SHIBA MAN: <span className={styles.colorText}>PRE-SALE IS LIVE</span>\n          </h2>\n          <h4 className={styles.subtitle}>\n            Mint your Shiba Man NFT from unique Shiba Family collection\n          </h4>\n\n          <div className={styles.numbersBlock}>\n            <div className={styles.numbers}>\n              <div className={styles.amount}>\n                <span>{mintPrice}</span>\n                <Image src={solanaLogo}/>\n              </div>\n              <div className={styles.text}>PRE-SALE MINT PRICE</div>\n            </div>\n            <div className={styles.numbers}>\n              <div className={styles.amount}>\n                <span>{mintSupply}</span>\n              </div>\n              <div className={styles.text}>PRE-SALE MINT PRICE</div>\n            </div>\n          </div>\n\n          <p className={styles.description}>\n            Only whitelisted users can participate in the Pre-Sale. <br/>\n            Public Sale start: 17th October, 5PM UTC Time.\n          </p>\n\n          <div className={styles.buttonGroup}>\n            <Wallet btnStyle={\"blue\"}/>\n            <a href=\"#how-to\" className={styles.link} onClick={clearUrl}>HOW TO MINT</a>\n          </div>\n\n        </div>\n        <div className={styles.rightColumn}>\n          <Image src={heroGif} className={styles.image}/>\n        </div>\n      </div>\n    </Container>\n  )\n};\n\nexport default Hero;","import React from \"react\";\n\nimport { Container } from \"components\";\n\nimport styles from \"./how-to.module.css\";\n\nconst HowTo = () => {\n  return (\n    <Container>\n      <div className={styles.container} id={\"how-to\"}>\n        <h4 className={styles.subtitle}>HOW TO MINT</h4>\n        <h2 className={styles.title}>SHIBA MAN NFT</h2>\n        <div className={styles.description}>\n          <div className={styles.listBlock}>\n            <ul className={styles.list}>\n              <li className={styles.item}>Click <strong>“Connect Wallet”</strong> button;</li>\n              <li className={styles.item}>Choose <strong>Phantom</strong> or <strong>Sollet</strong> wallet in the\n                popup. ( Phantom Recommended );\n              </li>\n              <li className={styles.item}>Login to your wallet if It’s asking you;</li>\n              <li className={styles.item}>Back to the Minting page;</li>\n              <li className={styles.item}>The <strong>“Connect Wallet”</strong> button will be replaced with “Mint”\n                button;\n              </li>\n              <li className={styles.item}>Click <strong>“Mint”</strong> button ( make sure you got enough SOL on your\n                balance );\n              </li>\n              <li className={styles.item}>Click <strong>“Approve”</strong> transaction;</li>\n              <li className={styles.item}>After confirmation, you will be redirected back to the Minting page;</li>\n              <li className={styles.item}>Wait. It can take up to few minutes to mint NFT</li>\n              <li className={styles.item}>If everything is fine, you will see you NFT in your Phantom wallet</li>\n              <li className={styles.item}>Click <strong>“Mint”</strong> again if you would like to get more Shiba Man\n              </li>\n            </ul>\n            <div className={styles.ital}>\n              *Don’t forget to post your NFT in social networks and tag @shibafamily_nft 🚀\n            </div>\n          </div>\n          <div className={styles.videoBlock}>\n            <iframe src=\"https://www.youtube.com/embed/vH6pe_4DTmA?controls=0&hl=en&modestbranding=1&rel=0\"\n                    frameBorder=\"0\"\n                    title=\"Shiba Family\"\n                    allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n                    allowFullScreen></iframe>\n          </div>\n        </div>\n      </div>\n    </Container>\n  )\n};\n\nexport default HowTo;","export default __webpack_public_path__ + \"static/media/discord.427350f0.svg\";","export default __webpack_public_path__ + \"static/media/twitter.566b13a9.svg\";","import React from \"react\";\n\nimport { Container, Image } from \"../../index\";\n\nimport styles from \"./footer.module.css\";\n\nimport logo from \"assets/logo.svg\";\nimport discord from \"assets/discord.svg\";\nimport twitter from \"assets/twitter.svg\";\n\nconst discordLink = \"https://discord.com/invite/VU7sMvXDyE\";\nconst twitterLink = \"https://twitter.com/shibafamily_nft\";\n\nconst Footer = () => {\n  return (\n    <Container wrapperClassName={styles.wrapper}>\n      <footer className={styles.footer}>\n        <Image src={logo} className={styles.footerLogo}/>\n        <div className={styles.socialBlock}>\n          <div className={styles.social}>\n            <Image src={discord} link={discordLink} isBlank={true}/>\n          </div>\n          <div className={styles.social}>\n            <Image src={twitter} link={twitterLink} isBlank={true}/>\n          </div>\n        </div>\n        <div className={styles.copyright}>© Shiba Family Copyright 2021</div>\n      </footer>\n    </Container>\n  )\n};\n\nexport default Footer;","import styles from \"./wallet-button.module.css\";\n\nconst WalletButton = ( { children }: any ) => {\n  return (\n    <div className={styles.wrapper}>\n      {children}\n    </div>\n  )\n};\n\nexport default WalletButton;","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\n\nconst initialState = {\n  address: null,\n  balance: null\n};\n\nconst wallet = createSlice( {\n  name: \"wallet\",\n  initialState,\n  reducers: {\n    resetStore: () => initialState,\n    setAddress: ( state, action: PayloadAction<any> ) => {\n      state.address = action.payload;\n    },\n    setUserBalance: ( state, action: PayloadAction<any> ) => {\n      state.balance = action.payload;\n    }\n  }\n} );\n\nexport const { resetStore, setAddress, setUserBalance } = wallet.actions;\n\nexport default wallet.reducer","import { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport Countdown from \"react-countdown\";\nimport { Button, CircularProgress, Snackbar } from \"@material-ui/core\";\nimport Alert from \"@material-ui/lab/Alert\";\n\nimport * as anchor from \"@project-serum/anchor\";\n\nimport { LAMPORTS_PER_SOL } from \"@solana/web3.js\";\n\nimport { useWallet } from \"@solana/wallet-adapter-react\";\nimport { WalletDialogButton } from \"@solana/wallet-adapter-material-ui\";\n\nimport WalletButton from \"./components/wallet-button\";\n\nimport {\n  CandyMachine,\n  awaitTransactionSignatureConfirmation,\n  getCandyMachineState,\n  mintOneToken,\n  shortenAddress,\n} from \"./candy-machine\";\n\nimport { useDispatch } from \"react-redux\";\nimport { setAddress, setUserBalance } from \"store/wallet\";\n\nimport styles from \"./components/wallet-button.module.css\";\n\n// const btnStyles = \"background-color: #E8963E !important; border-radius: 10px !important;\";\n\nconst ConnectButton = styled( WalletDialogButton )``;\n\nconst CounterText = styled.span``; // add your styles here\n\nconst MintContainer = styled.div``; // add your styles here\n\nconst MintButton = styled( Button )``; // add your styles here\n\nexport interface HomeProps {\n  candyMachineId: anchor.web3.PublicKey;\n  config: anchor.web3.PublicKey;\n  connection: anchor.web3.Connection;\n  startDate: number;\n  treasury: anchor.web3.PublicKey;\n  txTimeout: number;\n  btnStyle: \"blue\" | \"purple\";\n}\n\nconst Home = ( props: HomeProps ) => {\n  const [balance, setBalance] = useState<number>();\n  const [isActive, setIsActive] = useState( false ); // true when countdown completes\n  const [isSoldOut, setIsSoldOut] = useState( false ); // true when items remaining is zero\n  const [isMinting, setIsMinting] = useState( false ); // true when user got to press MINT\n\n  const [alertState, setAlertState] = useState<AlertState>( {\n    open: false,\n    message: \"\",\n    severity: undefined,\n  } );\n\n  const [startDate, setStartDate] = useState( new Date( props.startDate ) );\n\n  const wallet = useWallet();\n  const [candyMachine, setCandyMachine] = useState<CandyMachine>();\n\n  const onMint = async () => {\n    try {\n      setIsMinting( true );\n      if ( wallet.connected && candyMachine?.program && wallet.publicKey ) {\n        const mintTxId = await mintOneToken(\n          candyMachine,\n          props.config,\n          wallet.publicKey,\n          props.treasury\n        );\n\n        const status = await awaitTransactionSignatureConfirmation(\n          mintTxId,\n          props.txTimeout,\n          props.connection,\n          \"singleGossip\",\n          false\n        );\n\n        if ( !status?.err ) {\n          setAlertState( {\n            open: true,\n            message: \"Congratulations! Mint succeeded!\",\n            severity: \"success\",\n          } );\n        } else {\n          setAlertState( {\n            open: true,\n            message: \"Mint failed! Please try again!\",\n            severity: \"error\",\n          } );\n        }\n      }\n    } catch ( error: any ) {\n      // TODO: blech:\n      let message = error.msg || \"Minting failed! Please try again!\";\n      if ( !error.msg ) {\n        if ( error.message.indexOf( \"0x138\" ) ) {\n        } else if ( error.message.indexOf( \"0x137\" ) ) {\n          message = `SOLD OUT!`;\n        } else if ( error.message.indexOf( \"0x135\" ) ) {\n          message = `Insufficient funds to mint. Please fund your wallet.`;\n        }\n      } else {\n        if ( error.code === 311 ) {\n          message = `SOLD OUT!`;\n          setIsSoldOut( true );\n        } else if ( error.code === 312 ) {\n          message = `Minting period hasn't started yet.`;\n        }\n      }\n\n      setAlertState( {\n        open: true,\n        message,\n        severity: \"error\",\n      } );\n    } finally {\n      if ( wallet?.publicKey ) {\n        const balance = await props.connection.getBalance( wallet?.publicKey );\n        setBalance( balance / LAMPORTS_PER_SOL );\n      }\n      setIsMinting( false );\n    }\n  };\n\n  useEffect( () => {\n    (async () => {\n      if ( wallet?.publicKey ) {\n        const balance = await props.connection.getBalance( wallet.publicKey );\n        setBalance( balance / LAMPORTS_PER_SOL );\n\n      }\n    })();\n  }, [wallet, props.connection] );\n\n  useEffect( () => {\n    (async () => {\n      if (\n        !wallet ||\n        !wallet.publicKey ||\n        !wallet.signAllTransactions ||\n        !wallet.signTransaction\n      ) {\n        return;\n      }\n\n      const anchorWallet = {\n        publicKey: wallet.publicKey,\n        signAllTransactions: wallet.signAllTransactions,\n        signTransaction: wallet.signTransaction,\n      } as anchor.Wallet;\n\n      const { candyMachine, goLiveDate, itemsRemaining } =\n        await getCandyMachineState(\n          anchorWallet,\n          props.candyMachineId,\n          props.connection\n        );\n\n      setIsSoldOut( itemsRemaining === 0 );\n      setStartDate( goLiveDate );\n      setCandyMachine( candyMachine );\n    })();\n  }, [wallet, props.candyMachineId, props.connection] );\n\n  const dispatch = useDispatch();\n\n  useEffect( () => {\n    if ( wallet.connected ) {\n      const address = shortenAddress( wallet.publicKey?.toBase58() || \"\" );\n      dispatch( setAddress( address ) );\n      dispatch( setUserBalance( balance ) );\n    }\n  }, [wallet.connected, balance, dispatch, wallet.publicKey] );\n\n\n  const btnColor = props.btnStyle === \"purple\" ? styles.purple : styles.blue;\n\n  return (\n    <main>\n      <MintContainer>\n        {!wallet.connected ? (\n          <ConnectButton className={`${styles.connectButton} ${btnColor}`}>\n            <WalletButton>\n              <span className={styles.text}>Connect Wallet</span>\n            </WalletButton>\n          </ConnectButton>\n        ) : (\n          <MintButton\n            disabled={isSoldOut || isMinting || !isActive}\n            onClick={onMint}\n            variant=\"contained\"\n            className={styles.mintButton}\n          >\n            {isSoldOut ? (\n                <span className={styles.text}>SOLD OUT</span>\n            ) : isActive ? (\n              isMinting ? (\n                <CircularProgress/>\n              ) : (\n                <WalletButton>\n                  <span className={styles.text}>MINT</span>\n                </WalletButton>\n              )\n            ) : (\n              <Countdown\n                date={startDate}\n                onMount={( { completed } ) => completed && setIsActive( true )}\n                onComplete={() => setIsActive( true )}\n                renderer={renderCounter}\n              />\n            )}\n          </MintButton>\n        )}\n      </MintContainer>\n      {/*{wallet.connected && (*/}\n      {/*  <p className={styles.highlightedText}>Address: {shortenAddress( wallet.publicKey?.toBase58() || \"\" )}</p>*/}\n      {/*)}*/}\n\n      {/*{wallet.connected && (*/}\n      {/*  <p className={styles.highlightedText}>Balance: {(balance || 0).toLocaleString()} SOL</p>*/}\n      {/*)}*/}\n\n      <Snackbar\n        open={alertState.open}\n        autoHideDuration={6000}\n        onClose={() => setAlertState( { ...alertState, open: false } )}\n      >\n        <Alert\n          className={styles.notifications}\n          onClose={() => setAlertState( { ...alertState, open: false } )}\n          severity={alertState.severity}\n        >\n          {alertState.message}\n        </Alert>\n      </Snackbar>\n    </main>\n  );\n};\n\ninterface AlertState {\n  open: boolean;\n  message: string;\n  severity: \"success\" | \"info\" | \"warning\" | \"error\" | undefined;\n}\n\nconst renderCounter = ( { days, hours, minutes, seconds, completed }: any ) => {\n  return (\n    <CounterText>\n      {hours} hours, {minutes} minutes, {seconds} seconds\n    </CounterText>\n  );\n};\n\nexport default Home;\n","import { useMemo } from \"react\";\n\nimport * as anchor from \"@project-serum/anchor\";\nimport { clusterApiUrl } from \"@solana/web3.js\";\nimport { WalletAdapterNetwork } from \"@solana/wallet-adapter-base\";\nimport {\n  getPhantomWallet,\n  getSolflareWallet,\n  getSolletWallet,\n} from \"@solana/wallet-adapter-wallets\";\n\nimport {\n  ConnectionProvider,\n  WalletProvider,\n} from \"@solana/wallet-adapter-react\";\n\nimport { WalletDialogProvider } from \"@solana/wallet-adapter-material-ui\";\n\nimport Home from \"./Home\";\n\nconst treasury = new anchor.web3.PublicKey(\n  process.env.REACT_APP_TREASURY_ADDRESS!\n);\n\nconst config = new anchor.web3.PublicKey(\n  process.env.REACT_APP_CANDY_MACHINE_CONFIG!\n);\n\nconst candyMachineId = new anchor.web3.PublicKey(\n  process.env.REACT_APP_CANDY_MACHINE_ID!\n);\n\nconst network = process.env.REACT_APP_SOLANA_NETWORK as WalletAdapterNetwork;\n\nconst rpcHost = process.env.REACT_APP_SOLANA_RPC_HOST!;\nconst connection = new anchor.web3.Connection( rpcHost );\n\nconst startDateSeed = parseInt( process.env.REACT_APP_CANDY_START_DATE!, 10 );\n\nconst txTimeout = 30000; // milliseconds (confirm this works for your project)\n\nexport interface ConnectBtnStyle {\n  btnStyle: \"blue\" | \"purple\";\n}\n\nconst Wallet = ( { btnStyle }: ConnectBtnStyle ) => {\n  const endpoint = useMemo( () => clusterApiUrl( network ), [] );\n  const wallets = useMemo(\n    () => [getPhantomWallet(), getSolflareWallet(), getSolletWallet()],\n    []\n  );\n  return (\n    <ConnectionProvider endpoint={endpoint}>\n      <WalletProvider wallets={wallets} autoConnect>\n        <WalletDialogProvider>\n          <Home\n            candyMachineId={candyMachineId}\n            config={config}\n            connection={connection}\n            startDate={startDateSeed}\n            treasury={treasury}\n            txTimeout={txTimeout}\n            btnStyle={btnStyle}\n          />\n        </WalletDialogProvider>\n      </WalletProvider>\n    </ConnectionProvider>\n  )\n};\n\nexport default Wallet;\n","import { combineReducers, configureStore } from \"@reduxjs/toolkit\";\n\nimport wallet from \"./wallet/wallet.redux\";\n\nconst reducer = combineReducers({\n  wallet\n});\n\nconst store = configureStore({\n  reducer,\n  middleware: [],\n})\n\nexport type RootState = ReturnType<typeof reducer>\nexport default store;","import React from 'react';\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\n\nimport { Header, Hero, HowTo, Footer } from \"components\";\nimport store from \"./store/index\";\n\nimport \"./index.css\";\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <Provider store={store}>\n          <Header/>\n          <Hero/>\n          <HowTo/>\n          <Footer/>\n        </Provider>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById( 'root' )\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"wallet-button_wrapper__3GPap\",\"text\":\"wallet-button_text__2B9sr\",\"connectButton\":\"wallet-button_connectButton__OCHlk\",\"highlightedText\":\"wallet-button_highlightedText__3Jn8P\",\"notifications\":\"wallet-button_notifications__2hn0k\",\"mintButton\":\"wallet-button_mintButton__3P056\",\"purple\":\"wallet-button_purple__31VVy\",\"blue\":\"wallet-button_blue__XiL7r\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"footer_wrapper__3xKw7\",\"footer\":\"footer_footer__2hKgN\",\"footerLogo\":\"footer_footerLogo__1Oria\",\"socialBlock\":\"footer_socialBlock__3Hdt7\",\"social\":\"footer_social__35Gui\",\"copyright\":\"footer_copyright__2rl4x\"};"],"sourceRoot":""}